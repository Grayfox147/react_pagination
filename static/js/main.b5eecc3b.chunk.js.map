{"version":3,"sources":["components/Pagination/Pagination.tsx","utils.ts","App.tsx","index.tsx"],"names":["Pagination","perPage","total","pages","currentPage","onPageChange","isFirstPage","lastPage","Math","ceil","isLastPage","className","classNames","disabled","href","onClick","map","page","active","getNumbers","from","to","numbers","n","push","items","App","useState","selectedItemPerPage","setSelectedItemPerPage","setCurrentPage","length","lastItemIndex","firtItemIndex","visibleItems","slice","id","value","onChange","event","target","item","htmlFor","number","ReactDOM","render","document","getElementById"],"mappings":"kNAWaA,EAA8B,SAAC,GAMrC,IALLC,EAKI,EALJA,QACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAA8B,IAAhBF,EACdG,EAAWC,KAAKC,KAAKP,EAAQD,GAC7BS,EAAaN,IAAgBG,EAEnC,OACE,mCACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAAUP,IAFd,SAKE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAeR,EACfS,QAAS,kBAAMV,EAAcD,EAAc,IAL7C,oBAUDD,EAAMa,KAAI,SAACC,GAAD,OACT,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQD,IAASb,IAHvB,SAOE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,WACHE,IAASb,GACXC,EAAaY,IANnB,SAUGA,KAZEA,MAgBT,oBAAIN,UAAWC,IACb,YACA,CAAEC,SAAUH,IAFd,SAKE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAAS,kBAAMV,EAAcD,EAAc,IAL7C,0BCnEH,SAASe,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,ECDT,IAAMG,EAAQN,EAAW,EAAG,IACzBH,KAAI,SAAAO,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,IACA,EAAsDC,mBAAS,GAA/D,mBAAOC,EAAP,KAA4BC,EAA5B,KACA,EAAsCF,mBAAS,GAA/C,mBAAOvB,EAAP,KAAoB0B,EAApB,KACA,EAAgBH,mBAASF,EAAMM,QAAxB7B,EAAP,oBAGMC,EAAQgB,EAAW,EADHX,KAAKC,KAAKgB,EAAMM,OAASH,IAGzCI,EAAgB5B,EAAcwB,GAAuB1B,EACtDE,EAAcwB,EACd1B,EAEC+B,EAAgB7B,EAAcwB,EAAsBA,EAEpDM,EAAef,EAAW,EAAG,IAAIgB,MAAMF,EAAeD,GAAehB,KAAI,SAAAO,GAAC,qBAAYA,MAM5F,OACE,sBAAKZ,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWP,EADX,mBACiC6B,EAAgB,EADjD,cACwDD,EADxD,aAIA,sBAAKrB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRyB,GAAG,kBACHzB,UAAU,eACV0B,MAAOT,EACPU,SAAU,SAACC,GACTV,GAAwBU,EAAMC,OAAOH,OACrCP,EAAe,IAPnB,SA9BY,CAAC,EAAG,EAAG,GAAI,IAwCRd,KAAI,SAACyB,GAAD,OACf,wBAAQJ,MAAOI,EAAf,SAAsBA,WAK5B,uBAAOC,QAAQ,kBAAkB/B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,QAAS2B,EACT1B,MAAOuB,EAAMM,OACb3B,YAAaA,EACbC,aAvCmB,SAACsC,GACxBb,EAAea,IAuCXxC,MAAOA,IAET,6BACG+B,EAAalB,KAAI,SAACyB,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SAAoBA,aCnE9BG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b5eecc3b.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (number: number) => void,\n  pages: number[],\n};\n\nexport const Pagination: React.FC<Props> = ({\n  perPage,\n  total,\n  pages,\n  currentPage,\n  onPageChange,\n}) => {\n  const isFirstPage = currentPage === 1;\n  const lastPage = Math.ceil(total / perPage);\n  const isLastPage = currentPage === lastPage;\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames(\n          'page-item',\n          { disabled: isFirstPage },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={isFirstPage}\n            onClick={() => onPageChange((currentPage - 1))}\n          >\n            «\n          </a>\n        </li>\n        {pages.map((page) => (\n          <li\n            className={classNames(\n              'page-item',\n              { active: page === currentPage },\n            )}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => {\n                if (page !== currentPage) {\n                  onPageChange(page);\n                }\n              }}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li className={classNames(\n          'page-item',\n          { disabled: isLastPage },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={isLastPage}\n            onClick={() => onPageChange((currentPage + 1))}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const ItemPerPage = [3, 5, 10, 20];\n  const [selectedItemPerPage, setSelectedItemPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [total] = useState(items.length);\n\n  const numberOfPages = Math.ceil(items.length / selectedItemPerPage);\n  const pages = getNumbers(1, numberOfPages);\n\n  const lastItemIndex = currentPage * selectedItemPerPage <= total\n    ? (currentPage * selectedItemPerPage)\n    : (total);\n\n  const firtItemIndex = currentPage * selectedItemPerPage - selectedItemPerPage;\n\n  const visibleItems = getNumbers(1, 42).slice(firtItemIndex, lastItemIndex).map(n => `Item ${n}`);\n\n  const handlePageChange = (number: number) => {\n    setCurrentPage(number);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firtItemIndex + 1} - ${lastItemIndex} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={selectedItemPerPage}\n            onChange={(event) => {\n              setSelectedItemPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            {ItemPerPage.map((item) => (\n              <option value={item}>{item}</option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        perPage={selectedItemPerPage}\n        total={items.length}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n        pages={pages}\n      />\n      <ul>\n        {visibleItems.map((item) => (\n          <li data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}